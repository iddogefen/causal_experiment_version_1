     /* define parameters to include in the css */
     :root {
      --img_height: 500px;
      --img_width: 500px;
      --circle_width: 40px;
      --circle_height: 40px;
      --circle_top_position: 30%;
      --circle_left_position: 50%;
      --reward_width: 500px;
      --reward_height: 150px;
      --fixation_width: 120px;
      --frame_width: 10px;
      --prompt_height: 0px; /*30px;*/
      --prompt_width: calc(--img_width * 2 + --fixation_width + --frame_width * 2); /* same width as the table excluding frames from both sides */
      --table_width: calc(promt_width + --frame_width * 2); /* prompt width including two frames */
      --table_height: calc(--img_height + promt_height + --frame_width * 2); /* maximum size is both images with their frames*/
      --red: rgb(255, 56, 0);
      --green: rgb(40, 232, 0);
      --grey: rgb(128, 128, 128);
      --white: rgb(255, 255, 255);
      --black: rgb(0, 0, 0);
  }

  /* general screen parameters */
  body {
      padding: 0px;
      margin: 0px;
      background-color: var(--grey); /*grey*/
      color: white;
      font-size: 14pt;
      font-family: "Ariel";
  }

  .instructions {
      display: grid;
      max-width: 100%;
      max-height: 100vh;
      margin: auto;
  }

  .table {
      position: relative;
      height: var(--table_height); /* 240px;*/
      width: var(--table_width); /* 490px */
      table-layout: fixed;
      border-spacing: 0px;
      border-collapse: separate;
  }

  .prompt {
      width: var(--prompt_width); /* 150px; */
      height: var(--prompt_height); /* 200px; */
      margin: 0px;
      padding: 0px;
  }

  .object {
      width: var(--img_width);
      height: var(--img_height);
      margin: 0px;
      padding: 0px;
      border: var(--frame_width) solid rgba(128, 128, 128, 0); /* the frame is transparent, to save room for it when it will be presented */
  }

  .localizer {
      width: var(--img_width);
      height: var(--img_height);
      margin: 0px;
      padding: 0px;
      border: var(--frame_width) solid rgba(128, 128, 128, 0); /* the frame is transparent, to save room for it when it will be presented */
  }

  #circle {
      border-radius: 50%;
      width: var(--circle_width);
      height: var(--circle_height);
      position: absolute;
      top: var(--circle_top_position);
      left: var(--circle_left_position);
      background: var(--red);
      color: var(--red);
  }

  #no-circle {
      border-radius: 50%;
      width: var(--circle_width);
      height: var(--circle_height);
      position: fixed;
      top: var(--circle_top_position);
      left: var(--circle_left_position);
      background: rgba(128, 128, 128, 0); /* transparent */
      color: rgba(128, 128, 128, 0);
  }

  .reward {
      width: var(--reward_width); /* 150px; */
      height: var(--reward_height); /* 200px; */
      margin: 0px;
      padding: 0px;
      border: var(--frame_width) solid rgba(128, 128, 128, 0); /* the frame is transparent, to save room for it when it will be presented */
  }

  .fixation {
      width: var(--fixation_width); /* 100px; */
      height: var(--img_height); /* 200px; */
      font-size: 200px;
      text-align: center;
      margin: 0;
      padding: 0;
  }

  .object.confirm {
      border: var(--frame_width) solid black;
  }

  .object.loss_frame {
      border: var(--frame_width) solid var(--red); /* red */
  }

  .object.gain_frame {
      border: var(--frame_width) solid var(--green); /* green */
  }

  .red {
      color: var(--red);
  }

  .green {
      color: var(--green);
  }

  .black {
      color: var(--black);
  }

  p:empty {
      display: none;
  }
  